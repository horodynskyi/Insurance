// <auto-generated />
using System;
using Insurance.Infrastracture.Infrastracture;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Insurance.WEBAPI.Migrations
{
    [DbContext(typeof(InsuranceDbContext))]
    [Migration("20210402032536_AddModelAndReferences")]
    partial class AddModelAndReferences
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.2.21154.2")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Insurance.DAL.Models.Agent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("patronumic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("secondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Insurance.DAL.Models.Branch", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Insurance.DAL.Models.BranchAgent", b =>
                {
                    b.Property<int?>("agentid")
                        .HasColumnType("int");

                    b.Property<int?>("branchid")
                        .HasColumnType("int");

                    b.HasIndex("agentid");

                    b.HasIndex("branchid");

                    b.ToTable("BranchAgents");
                });

            modelBuilder.Entity("Insurance.DAL.Models.Contract", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("agentid")
                        .HasColumnType("int");

                    b.Property<int?>("branchid")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("riskid")
                        .HasColumnType("int");

                    b.Property<int?>("tariffid")
                        .HasColumnType("int");

                    b.Property<int?>("typeInsuranceid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("agentid");

                    b.HasIndex("branchid");

                    b.HasIndex("riskid");

                    b.HasIndex("tariffid");

                    b.HasIndex("typeInsuranceid");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Insurance.DAL.Models.Reason", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("paid")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("Reasons");
                });

            modelBuilder.Entity("Insurance.DAL.Models.Risk", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("Risks");
                });

            modelBuilder.Entity("Insurance.DAL.Models.Tariff", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("wageRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("Tariffs");
                });

            modelBuilder.Entity("Insurance.DAL.Models.TerminatedContract", b =>
                {
                    b.Property<int?>("contractid")
                        .HasColumnType("int");

                    b.Property<int?>("reasonid")
                        .HasColumnType("int");

                    b.HasIndex("contractid")
                        .IsUnique()
                        .HasFilter("[contractid] IS NOT NULL");

                    b.HasIndex("reasonid");

                    b.ToTable("TerminatedContracts");
                });

            modelBuilder.Entity("Insurance.DAL.Models.TypeInsurance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TypeInsurances");
                });

            modelBuilder.Entity("Insurance.DAL.Models.BranchAgent", b =>
                {
                    b.HasOne("Insurance.DAL.Models.Agent", "agent")
                        .WithMany()
                        .HasForeignKey("agentid");

                    b.HasOne("Insurance.DAL.Models.Branch", "branch")
                        .WithMany()
                        .HasForeignKey("branchid");

                    b.Navigation("agent");

                    b.Navigation("branch");
                });

            modelBuilder.Entity("Insurance.DAL.Models.Contract", b =>
                {
                    b.HasOne("Insurance.DAL.Models.Agent", "agent")
                        .WithMany()
                        .HasForeignKey("agentid");

                    b.HasOne("Insurance.DAL.Models.Branch", "branch")
                        .WithMany()
                        .HasForeignKey("branchid");

                    b.HasOne("Insurance.DAL.Models.Risk", "risk")
                        .WithMany()
                        .HasForeignKey("riskid");

                    b.HasOne("Insurance.DAL.Models.Tariff", "tariff")
                        .WithMany()
                        .HasForeignKey("tariffid");

                    b.HasOne("Insurance.DAL.Models.TypeInsurance", "typeInsurance")
                        .WithMany()
                        .HasForeignKey("typeInsuranceid");

                    b.Navigation("agent");

                    b.Navigation("branch");

                    b.Navigation("risk");

                    b.Navigation("tariff");

                    b.Navigation("typeInsurance");
                });

            modelBuilder.Entity("Insurance.DAL.Models.TerminatedContract", b =>
                {
                    b.HasOne("Insurance.DAL.Models.Contract", "contract")
                        .WithOne()
                        .HasForeignKey("Insurance.DAL.Models.TerminatedContract", "contractid");

                    b.HasOne("Insurance.DAL.Models.Reason", "reason")
                        .WithMany()
                        .HasForeignKey("reasonid");

                    b.Navigation("contract");

                    b.Navigation("reason");
                });
#pragma warning restore 612, 618
        }
    }
}
